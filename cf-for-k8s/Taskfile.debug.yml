# https://github.com/cloudfoundry/cf-for-k8s/blob/master/docs/deploy-local.md
# https://github.com/cloudfoundry/cf-for-k8s/blob/master/docs/deploy.md
# https://github.com/cloudfoundry/cf-k8s-networking/blob/917b615a745510ec944ab8f66efdd1fa78c5fc6b/doc/managing-certificates-for-application-ingress.md
# https://github.com/cloudfoundry/cf-k8s-networking/tree/master/doc/no-loadbalancer
# https://github.com/k14s/ytt/blob/develop/docs/lang-ref-ytt-overlay.md
# https://istio.io/latest/docs/ops/common-problems/network-issues/#route-rules-have-no-effect-on-ingress-gateway-requests
# https://istio.io/latest/docs/reference/config/networking/gateway/
# https://istio.io/latest/docs/reference/config/networking/service-entry/
# https://istio.io/latest/docs/reference/config/networking/virtual-service/
# https://istio.io/latest/docs/tasks/security/authentication/authn-policy/
# https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/
# https://istio.io/latest/docs/tasks/traffic-management/ingress/secure-ingress/
# https://www.istioworkshop.io/09-traffic-management/01-ingress-gateway/
---
version: "2"

tasks:
  cf-kpack:
    cmds:
      - exit 1
      - |
        kubectl -n cf-workloads-staging delete custombuilders cf-default-builder
        kubectl -n cf-workloads-staging get custombuilders -o yaml

  harbor:
    cmds:
      - exit 1
      # for dockerhub, the registry auth target is "https://index.docker.io/v1/".
      # notice "library" is the project and "kuard-amd64" is the repository;
      # the repository was created automatically by virtue of the push.
      - |
        kubectl -n cf-workloads-staging get images
        logs -namespace cf-workloads-staging -image IMAGEHERE
      - |
        kubectl -n harbor port-forward svc/harbor 8080:80
        kubectl -n cf-workloads-staging describe pods
        curl -u admin:admin localhost:8080/api/v2.0/systeminfo
        curl localhost:8080/api/v2.0/systeminfo
        curl localhost:8080/api/v2.0/users/current
        curl -u admin:admin localhost:8080/api/v2.0/users/current
        curl -u admin:admin localhost:8080/api/v2.0/projects
        curl -u admin:admin localhost:8080/api/v2.0/projects/library/repositories
      - |
        kubectl -n harbor port-forward svc/harbor 8080:80
      - |
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=core --tail 250
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=database --tail 250
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=jobservice --tail 250
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=nginx
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=portal --tail 250
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=redis --tail 250
        kubectl -n harbor logs -f -lapp=harbor -lcomponent=registry -c registry
      - |
        docker login --username admin --password Harbor12345 localhost:4107
        docker pull gcr.io/kuar-demo/kuard-amd64:blue
        docker tag gcr.io/kuar-demo/kuard-amd64:blue localhost:4107/library/kuard-amd64:blue
        docker images
        docker push localhost:4107/library/kuard-amd64:blue

  istio:
    cmds:
      - exit 1
      - | # https://istio.io/latest/docs/ops/common-problems/injection/
        kubectl get mutatingwebhookconfiguration istio-sidecar-injector -o yaml | grep "namespaceSelector:" -A5
        kubectl get namespace -L istio-injection
      - |
        kubectl -n prometheus-operator exec -it prometheus-prometheus-operator-prometheus-0 -- /bin/sh
        wget http://10.244.0.59:15090/stats/prometheus
      - | # https://istio.io/latest/docs/reference/commands/istioctl/
        istioctl analyze --all-namespaces
        istioctl dashboard envoy PODNAME.NAMESPACE
        istioctl dashboard envoy hash-browns-test-space-a4ecc5f951-0.cf-workloads
