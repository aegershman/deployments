# https://developer.sh/posts/prometheus-self-discovery
# https://github.com/cloudfoundry/cf-k8s-networking/blob/master/doc/architecture-decisions/0004-strategy-for-securing-network-traffic.md
# https://github.com/concourse/hush-house/blob/master/deployments/with-creds/metrics/values.yaml
# https://github.com/coreos/prometheus-operator/issues/2907
# https://github.com/helm/charts/blob/e9d85afa10373b94184e911ebc9eae4e1dfb3bfc/stable/prometheus-operator/values.yaml#L1695
# https://github.com/helm/charts/blob/master/stable/prometheus-operator/values.yaml
# https://github.com/helm/charts/issues/11310
# https://github.com/istio/istio/issues/18242
# https://github.com/istio/istio/issues/2628#issuecomment-358145100
# https://github.com/istio/istio/issues/7665
# https://github.com/istio/istio/issues/9150
# https://istio.io/latest/docs/ops/configuration/mesh/app-health-check/
# https://istiobyexample.dev/ingress/
# https://kubedb.com/docs/0.12.0/guides/redis/monitoring/using-builtin-prometheus/
# https://linuxacademy.com/blog/kubernetes/running-prometheus-on-kubernetes/
# https://rancher.com/blog/2020/custom-monitoring
# https://stackoverflow.com/questions/60168167/random-upstream-connect-error-or-disconnect-reset-before-headers-between-servi
#
# http://_x_.vcap.me:32080
# https://_x_.vcap.me:32443
---
alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - alertmanager.vcap.me

grafana:
  adminPassword: prom-operator
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - grafana.vcap.me

kubelet:
  enabled: false

kubeEtcd:
  enabled: false

kubeProxy:
  enabled: false

prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: true
    patch:
      enabled: true
      podAnnotations:
        sidecar.istio.io/inject: "false"
  podAnnotations:
    sidecar.istio.io/rewriteAppHTTPProbers: "true"
  logLevel: debug

prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - prometheus.vcap.me
  logLevel: debug
  retention: 10m
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    podMetadata:
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"

    ## AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations. Scrape configurations
    ## are appended to the configurations generated by the Prometheus Operator. Job configurations must have the form
    ## as specified in the official Prometheus documentation:
    ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config.
    ##
    additionalScrapeConfigs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs: [{ role: pod }]
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs: [{ role: endpoints }]
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [
                __address__,
                __meta_kubernetes_service_annotation_prometheus_io_port,
              ]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
      - job_name: pilot
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels:
              [
                __meta_kubernetes_service_name,
                __meta_kubernetes_endpoint_port_name,
              ]
            action: keep
            regex: istio-pilot;http-monitoring
