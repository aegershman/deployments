#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")

#@overlay/match by=overlay.subset({"kind":"Secret","metadata":{"name":"metric-proxy-ca","namespace":"cf-system"}})
#@overlay/remove
---
{}
#@overlay/match by=overlay.subset({"kind":"Secret","metadata":{"name":"metric-proxy-cert","namespace":"cf-system"}})
#@overlay/remove
---
{}
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Certificate
metadata:
  name: metric-proxy-ca
  namespace: cf-system
spec:
  isCA: true
  commonName: metric-proxy-ca
  organization: ""
  alternativeNames: []
  extendedKeyUsage: []
  duration: 365
  secretTemplate:
    data:
      #! used by leafs certs; must be present (default format) for leaf certs to find these keys
      crt.pem: certificate
      key.pem: privateKey
      #! used by deployments looking for the CA in a tls.crt/key combo
      tls.crt: certificate
      tls.key: privateKey
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: Certificate
metadata:
  name: metric-proxy-cert
  namespace: cf-system
spec:
  caRef:
    name: metric-proxy-ca
  isCA: false
  commonName: metric-proxy
  organization: ""
  alternativeNames: []
  extendedKeyUsage:
    - client_auth
    - server_auth
  duration: 365
  secretTemplate:
    data:
      tls.crt: certificate
      tls.key: privateKey
