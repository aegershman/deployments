# just trying it out

# export KUBECONFIG="$(kind get kubeconfig-path)"

version: "2"

env:
  KUBECONFIG:
    sh: kind get kubeconfig-path

tasks:
  create:
    cmds:
      - kind create cluster --config bootstrap/kind.config.yaml
      - task: bootstrap
      - task: sync

  bootstrap:
    cmds:
      - kubectl apply -f bootstrap/rbac-tiller.yml
      - helm init --service-account tiller --upgrade --wait

  delete:
    cmds:
      - kind delete cluster
      - docker system prune --all --volumes --force

  fly:
    cmds:
      - fly -t localhost login -c http://concourse.127.0.0.1.nip.io -u test -p test -n main -k
      - fly -t localhost sync
      - fly -t localhost sp -p basic -c bootstrap/basic-pipeline.yml -n
      - fly -t localhost unpause-pipeline -p basic

  sync:
    cmds:
      - helmfile sync

  enc:
    cmds:
      - sops --encrypt --input-type dotenv .envrc > .envrc.enc

  dec:
    cmds:
      - sops --decrypt --output-type dotenv .envrc.enc > .envrc

  clusterapi:
    # https://blog.scottlowe.org/2019/08/27/bootstrapping-a-kubernetes-cluster-on-aws-with-clusterapi/
    cmds:
      - kubectl apply -f bootstrap/cluster-api-components.yml
      - kubectl apply -f bootstrap/bootstrap-components.yml
      - |
        export AWS_B64ENCODED_CREDENTIALS=$(clusterawsadm alpha bootstrap encode-aws-credentials)
        cat bootstrap/infrastructure-components.yml | envsubst | kubectl apply -f -

  clusterapply:
    cmds:
      - kubectl apply -f bootstrap/cluster.yaml
      - kubectl apply -f bootstrap/controlplane.yaml
      - kubectl apply -f bootstrap/machinedeployment.yaml
