---
version: "2"

# TODO this is a really clever use of bosh to generate credentials and certificates
# https://github.com/cloudfoundry/cf-for-k8s/blob/master/hack/generate-values.sh#L75-L166

# other links:
# https://cf-operators.s3.amazonaws.com/helm-charts/index.html
# https://github.com/cloudfoundry-incubator/cf-operator/blob/master/deploy/helm/cf-operator/values.yaml
# https://github.com/cloudfoundry-incubator/cf-operator/blob/master/dev-env-kind.yaml
# https://github.com/cloudfoundry-incubator/cf-operator/releases
# https://github.com/cloudfoundry-incubator/kubecf-docs/blob/master/content/en/docs/Getting%20started/kubernetes-deploy.md
# https://github.com/cloudfoundry-incubator/kubecf/blob/master/deploy/helm/kubecf/values.yaml
# https://github.com/cloudfoundry-incubator/kubecf/blob/master/dev/kind/config.yaml
# https://github.com/cloudfoundry/cf-for-k8s/blob/master/deploy/kind/cluster.yml
# https://github.com/cloudfoundry/cf-for-k8s/blob/master/docs/deploy.md
# https://github.com/cloudfoundry/stratos/blob/master/deploy/kubernetes/console/values.yaml
# https://github.com/cloudfoundry/stratos/blob/master/deploy/kubernetes/console/values.yaml
# https://github.com/cloudfoundry/stratos/blob/master/manifest.yml
# https://github.com/SUSE/kubecf/blob/master/deploy/helm/kubecf/values.yaml#L101-L103
# https://github.com/SUSE/kubecf/blob/master/doc/dev/general.md
# https://github.com/SUSE/kubecf/blob/master/doc/dev/general.md#installation-of-the-nginx-ingress-controller
# https://github.com/SUSE/kubecf/blob/master/doc/dev/minikube.md
# https://kubecf.suse.dev/docs/tutorials/deploy-kind/
# https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
# https://scf-v3.s3.amazonaws.com/index.html

tasks:
  get-kind-node-ip:
    cmds:
      - |
        kubectl get node kind-control-plane --output jsonpath='{ .status.addresses[?(@.type == "InternalIP")].address }'

  rm-crds:
    cmds:
      - |
        kubectl delete crd boshdeployments.quarks.cloudfoundry.org
        kubectl delete crd quarksjobs.quarks.cloudfoundry.org
        kubectl delete crd quarkssecrets.quarks.cloudfoundry.org
        kubectl delete crd quarksstatefulsets.quarks.cloudfoundry.org

  crds-placeholder:
    cmds:
      # not to be actually ran as a task; just here for copy-paste-ability
      - exit 1
      - |
        kubectl get crds
        kubectl describe boshdeployments.quarks.cloudfoundry.org
        kubectl describe quarksjobs.quarks.cloudfoundry.org
        kubectl describe quarkssecrets.quarks.cloudfoundry.org
        kubectl describe quarksstatefulsets.quarks.cloudfoundry.org
      - |
        kubectl get boshdeployments.quarks.cloudfoundry.org
        kubectl get quarksjobs.quarks.cloudfoundry.org
        kubectl get quarkssecrets.quarks.cloudfoundry.org
        kubectl get quarksstatefulsets.quarks.cloudfoundry.org

  logs-placeholder:
    cmds:
      # not to be actually ran as a task; just here for copy-paste-ability
      - exit 1
      - |
        kubectl logs -f --tail=250 deployment.apps/cf-operator
        kubectl logs -f --tail=250 deployment.apps/cf-operator-quarks-job
      - |
        kubectl -n kubecf get all
        kubectl -n kubecf get pods
        kubectl -n kubecf get sts
      - | # trust me, it's kind of a fun game to follow this tree of thing-waiting-on-thing
        kubectl -n kubecf logs -f sts/adapter -c wait-for
        kubectl -n kubecf logs -f sts/api -c wait-for
        kubectl -n kubecf logs -f sts/bits -c wait-for
        kubectl -n kubecf logs -f sts/credhub -c wait-for
        kubectl -n kubecf logs -f sts/diego-api -c wait-for
        kubectl -n kubecf logs -f sts/doppler -c wait-for
        kubectl -n kubecf logs -f sts/eirini -c wait-for
        kubectl -n kubecf logs -f sts/log-api -c wait-for
        kubectl -n kubecf logs -f sts/nats -c wait-for
        kubectl -n kubecf logs -f sts/router -c wait-for
        kubectl -n kubecf logs -f sts/routing-api -c wait-for
        kubectl -n kubecf logs -f sts/singleton-blobstore -c wait-for
        kubectl -n kubecf logs -f sts/uaa -c wait-for
      - |
        kubectl -n kubecf logs -f --tail=250 database-0 -c database
        kubectl -n kubecf logs -f --tail=250 database-0 -c logs
      - |
        kubectl -n kubecf describe pod -lquarks.cloudfoundry.org/qjob-name=ig-kubecf
        kubectl -n kubecf logs -f -lquarks.cloudfoundry.org/qjob-name=ig-kubecf
      - |
        kubectl -n eirini get pods

  post-installation-validation:
    cmds:
      - | # check if the cf api is responding
        cf api --skip-ssl-validation api.kubecf.vcap.me
      - | # retrieve cf admin password
        echo $(kubectl -n kubecf get secret var-cf-admin-password -o jsonpath='{.data.password}' | base64 --decode)
        cf auth admin $(kubectl -n kubecf get secret var-cf-admin-password -o jsonpath='{.data.password}' | base64 --decode)
      - | # stand yourself up a nice little spot to push some hot juicy trash (see also: me)
        cf create-org scratch-org
        cf create-space scratch-space -o scratch-org
        cf target -o scratch-org -s scratch-space
      - | # enable docker so that you can push docker images
        cf enable-feature-flag diego_docker
      - | # push a docker app
        cf push -f config/kubecf/example-docker-cf-manifest-hash-browns-no-web.yml
        cf push -f config/kubecf/example-docker-cf-manifest-hash-browns.yml
        cf push -f config/kubecf/example-docker-cf-manifest-todo-ui.yml
      - | # after cf push'ing apps, see them pop up in the kubecf-eirini namespace as pods
        kubectl -n eirini get pods
      - | # misc. helpful for debugging
        kubectl -n ingress-nginx logs -f --tail 250 -lapp.kubernetes.io/name=ingress-nginx
        kubectl -n kubecf logs -f --tail 250 -lname=bits
        kubectl -n kubecf logs -f --tail 250 api-0 --all-containers --max-log-requests=60
        kubectl -n kubecf logs -f --tail 250 api-0 -c cloud-controller-ng-cloud-controller-ng
        kubectl -n kubecf logs -f --tail 250 api-0 -c route-registrar-route-registrar
        kubectl -n kubecf logs -f api-0

  post-install-minibroker:
    cmds:
      - |
        cf create-service-broker minibroker user pass http://minibroker-minibroker.minibroker.svc.cluster.local
        cf service-access
        cf enable-service-access mysql
        cf enable-service-access redis
        cf enable-service-access mongodb
        cf enable-service-access mariadb
        cf marketplace
      - |
        cf create-service mariadb 10-3-22 mariadb-svc
        cf create-service mariadb 10-3-22 mariadb-svc -c '{"db": {"name": "my_database"}}'
        cf service mariadb-svc
        cf services
      - |
        cf create-service-key mariadb-svc mykey
        cf service-keys mariadb-svc
        cf service-key mariadb-svc mykey
