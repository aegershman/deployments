# https://codevalue.com/tag/grafana/
# https://github.com/cloudfoundry-incubator/eirini-ci/blob/12bd5417927061220f2e06ac09b9bf30c82a163c/cluster-monitoring/grafana-values.yml
# https://github.com/helm/charts/blob/e5c64088924d943982714e0c3c8c9b8720334614/stable/grafana/values.yaml#L364
# https://github.com/helm/charts/blob/master/stable/grafana/values.yaml
# https://github.com/helm/charts/blob/master/stable/prometheus-operator/values.yaml
# https://github.com/helm/charts/issues/15725
# https://github.com/tretos53/notes/blob/master/Grafana/Readme.MD
# https://www.replex.io/blog/kubernetes-in-production-the-ultimate-guide-to-monitoring-resource-metrics-with-grafana
---
alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - alertmanager.vcap.me

grafana:
  adminPassword: prom-operator
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - grafana.vcap.me

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "custom"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: false
          options:
            path: /var/lib/grafana/dashboards/custom

  dashboards:
    custom:
      custom-dashboard:
        file: config/prometheus-operator/vendor/kubernetes/ingress-nginx

kubelet:
  enabled: false

kubeEtcd:
  enabled: false

kubeProxy:
  enabled: false

prometheusOperator:
  enabled: true
  logLevel: info

prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - prometheus.vcap.me
  logLevel: info
  retention: 10m

  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs: [{ role: pod }]
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs: [{ role: endpoints }]
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [
                __address__,
                __meta_kubernetes_service_annotation_prometheus_io_port,
              ]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
